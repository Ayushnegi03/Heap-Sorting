//Heap sort
#include <iostream>
using namespace std;
void heapify(int Arr[], int n, int Root)
{
   int Large = Root; 
   int l = 2*Root + 1;
   int r = 2*Root + 2; 
   if (l < n && Arr[l] > Arr[Large])
   Large = l;
   if (r < n && Arr[r] > Arr[Large])
   Large = r;
   if (Large != Root)
      {
      swap(Arr[Root], Arr[Large]);
      heapify(Arr, n, Large);
      }
}
void heapSort(int Arr[], int n)
{
   for (int i = n / 2 - 1; i >= 0; i--)
   heapify(Arr, n, i);
   for (int i=n-1; i>=0; i--)
   {
      swap(Arr[0], Arr[i]);
      heapify(Arr, i, 0);
   }
}
void displayArray(int Arr[], int n)
{
   for (int i=0; i<n; ++i)
   cout << Arr[i] << "\t";
   cout << "\n";
}
int main()
{
   int heap_arr[] = {4,17,3,12,9,6};
   int n = sizeof(heap_arr)/sizeof(heap_arr[0]);
   cout<<"Input array"<<endl;
   displayArray(heap_arr,n);
   heapSort(heap_arr, n);
   cout << "Sorted array"<<endl;
   displayArray(heap_arr, n);
}
//Output-
//Input array 
//4   17   3   12   9    6   
//Sorted array
//3   4   6   9   12    17
